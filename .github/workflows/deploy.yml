name: '[Manual] Deploy to GCP (GAE), Firebase (Hosting), Sync Env (Auth0,Remote Config), SmokeTest'
on:
  repository_dispatch:
    types: [Trigger-Deploy-Sync-Test]
  workflow_dispatch:
    inputs:
     fe_deploy:
       description: 'Deploy Frontend (Angular)'
       required: true
       type: boolean
       default: false
     fe_tag_name:
       required: true
       description: 'Tag to deploy (Frontend)'
       type: string
     be_deploy:
       description: 'Deploy Backend (Spring Boot)'
       required: true
       type: boolean
       default: false
     be_tag_name:
       required: true
       description: 'Tag to deploy (Backend)'
       type: string
     target_env:
       required: true
       description: 'Target Environment'
       type: choice
       options:
         - stage
         - prod
     auth0_sync:
       description: 'Sync Environments'
       required: true
       type: boolean
       default: false
     run_smoke_test:
       description: 'Run Smoke Test'
       required: true
       type: boolean
       default: true    

jobs:
  set_env:
    runs-on: ubuntu-latest
    name: 'SetUp Environment'
    outputs:
      fe_deploy: ${{ steps.set_vars.outputs.fe_deploy }}
      fe_tag_name: ${{ steps.set_vars.outputs.fe_tag_name }}
      be_deploy: ${{ steps.set_vars.outputs.be_deploy }}
      be_tag_name: ${{ steps.set_vars.outputs.be_tag_name }}
      target_env: ${{ steps.set_vars.outputs.target_env }}
      auth0_sync: ${{ steps.set_vars.outputs.auth0_sync }}
      run_smoke_test: ${{ steps.set_vars.outputs.run_smoke_test }}
      fb_project_id: ${{ steps.set_vars.outputs.target_env == 'prod' && 'wengonabarun' || 'nabarun-test' }}
      gcp_project_id: ${{ steps.set_vars.outputs.target_env == 'prod' && 'ngonabarun' || 'ngonabarun-stage' }}
      doppler_be_project: 'nabarun_backend'
    steps:
      - name: Set Global Variables
        id: set_vars
        run: |
          # Inputs 
          echo "fe_deploy=${{ github.event.client_payload.fe_deploy || inputs.fe_deploy }}" >> $GITHUB_OUTPUT
          echo "fe_tag_name=${{ github.event.client_payload.fe_tag_name || inputs.fe_tag_name }}" >> $GITHUB_OUTPUT
          echo "be_deploy=${{ github.event.client_payload.be_deploy || inputs.be_deploy }}" >> $GITHUB_OUTPUT
          echo "be_tag_name=${{ github.event.client_payload.be_tag_name || inputs.be_tag_name }}" >> $GITHUB_OUTPUT
          target_env=${{ github.event.client_payload.target_env || inputs.target_env }}
          echo "target_env=${target_env}" >> $GITHUB_OUTPUT
          echo "auth0_sync=${{ github.event.client_payload.auth0_sync || inputs.auth0_sync }}" >> $GITHUB_OUTPUT
          echo "run_smoke_test=${{ github.event.client_payload.run_smoke_test || inputs.run_smoke_test }}" >> $GITHUB_OUTPUT
          
  firebase_deploy:
    if: ${{ needs.set_env.outputs.fe_deploy == 'true' }}
    needs: set_env
    name: Deploy to Firebase
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/Firebase-Deploy.yml@main
    with:
     tag_name: ${{ needs.set_env.outputs.fe_tag_name }}
     firebase_project_id: ${{ needs.set_env.outputs.fb_project_id }}
     npm_run_command: ${{ needs.set_env.outputs.target_env == 'prod' && 'build' || 'buildstage' }}
    secrets:
      firebase_service_account: ${{ needs.set_env.outputs.target_env == 'prod' && secrets.FB_SA_KEY_PROD || secrets.FB_SA_KEY_STAGE }}
      repo_token: ${{ secrets.GITHUB_TOKEN }}
  
  gcp_deploy:
    if: ${{ needs.set_env.outputs.be_deploy == 'true' }}
    needs: set_env
    name: Deploy to GCP App Engine 
    uses: nabarun-ngo/ngo-nabarun-templates/.github/workflows/GCP-Deploy.yml@main
    with:
     tag_name: ${{ needs.set_env.outputs.be_tag_name }}
     target_folder: 'ngo-nabarun-app/target'
     gcp_project_id: ${{ needs.set_env.outputs.gcp_project_id }}
     app_env: ${{ needs.set_env.outputs.target_env == 'prod' && 'prod' || 'stage' }}
     app_doppler_project_name: ${{ needs.set_env.outputs.doppler_be_project }} 
     app_log_level: ${{ needs.set_env.outputs.target_env == 'prod' && 'INFO' || 'DEBUG' }}
    secrets:
      gcp_service_account: ${{ needs.set_env.outputs.target_env == 'prod' && secrets.GCP_SA_KEY_PROD || secrets.GCP_SA_KEY_STAGE }}
      app_doppler_service_token: ${{ needs.set_env.outputs.target_env == 'prod' && secrets.DOPPLER_TOKEN_NABARUN_BACKEND_PROD || secrets.DOPPLER_TOKEN_NABARUN_BACKEND_STAGE }}
 

  sync_data:
      # always Running this data sync for prod deployment
      if: ${{ needs.set_env.outputs.auth0_sync == 'true' || needs.set_env.outputs.target_env == 'prod' }}
      needs: set_env
      name: Trigger Sync Auth0 & Firebase
      runs-on: ubuntu-latest
      steps:
       - name: Repository Dispatch
         uses: peter-evans/repository-dispatch@v3
         with:
          repository: nabarun-ngo/ngo-nabarun-devops
          event-type: Trigger-Import-Sync-Data
          client-payload: |-
              {
                "auth0_sync_tenant": "true",
                "auth0_source_tenant": "${{ needs.set_env.outputs.target_env == 'prod' && 'STAGE' || 'DEV' }}",
                "auth0_dest_tenant": "${{ needs.set_env.outputs.target_env == 'prod' && 'PROD' || 'STAGE' }}",
                "firebase_sync_rc" : "${{ needs.set_env.outputs.target_env == 'prod' && 'true' || 'false' }}",
                "firebase_source_env" : "STAGE",
                "firebase_dest_env" : "PROD"
              }

  trigger_smoke_test:
    name: 'Trigger Smoke Test'
    if: ${{ needs.set_env.outputs.run_smoke_test == 'true' && always() }}
    needs: [set_env,firebase_deploy,gcp_deploy]
    runs-on: ubuntu-latest
    steps:
      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Check if 'Run-Smoke-Test' workflow is already running
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          running=$(gh run list --repo ${{ github.repository }} --status in_progress --json name --jq '.[] | select(.name=="[Trigger] Run Automated Test") | .name')
           if [[ -n "$running" ]]; then
            echo "TRIGGER_SMOKE_TEST=false" >> $GITHUB_ENV
          else
            echo "TRIGGER_SMOKE_TEST=true" >> $GITHUB_ENV
          fi

      - name: Print the result
        run: echo "Trigger Run-Smoke-Test ? $TRIGGER_SMOKE_TEST"
        
      - name: Repository Dispatch
        if:  env.TRIGGER_SMOKE_TEST == 'true'
        uses: peter-evans/repository-dispatch@v3
        with:
          repository: nabarun-ngo/ngo-nabarun-devops
          event-type: Trigger-Smoke-Test
          client-payload: |-
              {
                "test_env": "${{ needs.set_env.outputs.target_env }}",
                "test_type": "Smoke",
                "test_filter_tag": "${{ needs.set_env.outputs.target_env == 'prod' && '@smokeprod' || '@smoke' }}"
              }
